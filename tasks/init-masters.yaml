- name: make sure /etc/kubeadm directory exists
  file:
    path: /etc/kubeadm/
    state: directory
    mode: 0755
  when: 'inventory_hostname == groups["kubernetes_masters"][0]'
  tags:
  - master


- name: Copy the kubeadm init config
  template:
    src: 'kube-admin-config.yaml.j2'
    dest: '/etc/kubeadm/config.yaml'
    mode: 0644
  when: 'inventory_hostname == groups["kubernetes_masters"][0]'
  tags:
  - master


- name: check init lck
  stat:
    path: '/etc/kubernetes/admin.conf'
  register: node_initialized
  tags:
  - master


- name: Init master node 0
  shell: 'kubeadm init --config /etc/kubeadm/config.yaml > /etc/kubernetes/init.lck'
  register: init_master_output
  when: 'inventory_hostname == groups["kubernetes_masters"][0] and not node_initialized.stat.exists'
  tags:
  - master


- name: debug join commands
  debug:
    var: init_master_output
  when: 'inventory_hostname == groups["kubernetes_masters"][0]'
  tags:
  - master


- name: get join command
  shell: |
      a=$(cat /etc/kubernetes/init.lck|grep 'kubeadm join'|grep -v '^ ');
      b=$(cat /etc/kubernetes/init.lck|grep 'ca-cert-hash'|tail -1);
      c="${a::-1}$b";
      echo $c
  args:
    executable: /bin/bash
  register: join_command
  delegate_to: "{{ groups['kubernetes_masters'][0] }}"
  tags:
  - master


- name: debug join command
  debug:
    var: join_command['stdout']
  when: 'inventory_hostname == groups["kubernetes_masters"][0]'
  tags:
  - master


- name: set fact on other hosts
  set_fact: basic_command="{{ join_command['stdout'] }}"
  tags:
  - master


- name: copy PKI files to other master servers
  synchronize:
    src: /etc/kubernetes/pki
    dest: /etc/kubernetes/
    mode: push
  delegate_to: "{{ groups['kubernetes_masters'][0] }}"
  when: >
          inventory_hostname in groups["kubernetes_masters"] and
          inventory_hostname != groups["kubernetes_masters"][0]
  tags:
  - master


- name: remove unneeded etcd certs
  command: "rm -rf {{ item }}"
  with_items:
    - /etc/kubernetes/pki/etcd/healthcheck-client.key
    - /etc/kubernetes/pki/etcd/healthcheck-client.crt
    - /etc/kubernetes/pki/etcd/peer.key
    - /etc/kubernetes/pki/etcd/peer.crt
    - /etc/kubernetes/pki/etcd/server.key
    - /etc/kubernetes/pki/etcd/server.crt
  when: >
          inventory_hostname in groups["kubernetes_masters"] and
          inventory_hostname != groups["kubernetes_masters"][0] and
          not node_initialized.stat.exists
  tags:
  - master


- name: wait 5 mins to let primary master to be ready
  command: "sleep 300"
  when: >
          inventory_hostname in groups["kubernetes_masters"] and
          inventory_hostname != groups["kubernetes_masters"][0] and
          not node_initialized.stat.exists
  tags:
  - master


- name: stop keepalive and haproxy on other master nodes
  shell: |
          systemctl stop haproxy;
          systemctl stop keepalived
  when: >
          inventory_hostname in groups["kubernetes_masters"] and
          inventory_hostname != groups["kubernetes_masters"][0]
  tags:
  - master


- name: restart Keepalive and Haproxy on primary master
  shell: |
          systemctl restart keepalived;
          systemctl restart haproxy;
          sleep 60
  when: > 
          inventory_hostname in groups["kubernetes_masters"] and
          not node_initialized.stat.exists
  tags:
  - master


- name: join other masters
  command: "{{ basic_command }} --control-plane"
  when: >
          inventory_hostname in groups["kubernetes_masters"] and
          inventory_hostname != groups["kubernetes_masters"][0] and
          not node_initialized.stat.exists
  tags:
  - master


- name: start keepalive and haproxy on other master nodes
  shell: |
          systemctl start keepalived;
          systemctl start haproxy
  when: >
          inventory_hostname in groups["kubernetes_masters"] and
          inventory_hostname != groups["kubernetes_masters"][0]
  tags:
  - master
